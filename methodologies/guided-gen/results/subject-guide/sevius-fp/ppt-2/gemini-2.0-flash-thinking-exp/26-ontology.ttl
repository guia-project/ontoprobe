
@prefix onto: <http://example.org/ontology/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

# Ontology
<http://example.org/ontology/> a owl:Ontology .

# Class definitions
onto:Subject a owl:Class .
onto:Character a owl:Class .
onto:MandatoryCharacter a owl:Class ;
    rdfs:subClassOf onto:Character .
onto:OptionalCharacter a owl:Class ;
    rdfs:subClassOf onto:Character .
onto:StudyPlan a owl:Class .
onto:School a owl:Class .
onto:University a owl:Class .
onto:Professor a owl:Class .
onto:Competence a owl:Class .
onto:Outcome a owl:Class .
onto:Evaluation a owl:Class .
onto:Activity a owl:Class .
onto:Topic a owl:Class .
onto:Resource a owl:Class .
onto:RecommendedPreviousSubject a owl:Class .
onto:RecommendedPreviousKnowledge a owl:Class .

# Datatype Properties
onto:Subject_name a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_code a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_course a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_courseYear a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_credits a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_language a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_period a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .
onto:Subject_evaluationCriteria a owl:DatatypeProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range xsd:string .

onto:StudyPlan_code a owl:DatatypeProperty ;
    rdfs:domain onto:StudyPlan ;
    rdfs:range xsd:string .
onto:StudyPlan_name a owl:DatatypeProperty ;
    rdfs:domain onto:StudyPlan ;
    rdfs:range xsd:string .

onto:School_name a owl:DatatypeProperty ;
    rdfs:domain onto:School ;
    rdfs:range xsd:string .

onto:Professor_name a owl:DatatypeProperty ;
    rdfs:domain onto:Professor ;
    rdfs:range xsd:string .
onto:Professor_isCoordinator a owl:DatatypeProperty ;
    rdfs:domain onto:Professor ;
    rdfs:range xsd:string . # Using string as per general requirement, could be xsd:boolean

onto:Competence_code a owl:DatatypeProperty ;
    rdfs:domain onto:Competence ;
    rdfs:range xsd:string .
onto:Competence_description a owl:DatatypeProperty ;
    rdfs:domain onto:Competence ;
    rdfs:range xsd:string .

onto:Outcome_code a owl:DatatypeProperty ;
    rdfs:domain onto:Outcome ;
    rdfs:range xsd:string .
onto:Outcome_description a owl:DatatypeProperty ;
    rdfs:domain onto:Outcome ;
    rdfs:range xsd:string .

onto:Evaluation_name a owl:DatatypeProperty ;
    rdfs:domain onto:Evaluation ;
    rdfs:range xsd:string .

onto:Activity_name a owl:DatatypeProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range xsd:string .
onto:Activity_modality a owl:DatatypeProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range xsd:string .
onto:Activity_weight a owl:DatatypeProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range xsd:string .
onto:Activity_duration a owl:DatatypeProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range xsd:string .
onto:Activity_minGrade a owl:DatatypeProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range xsd:string .

onto:Topic_name a owl:DatatypeProperty ;
    rdfs:domain onto:Topic ;
    rdfs:range xsd:string .

onto:Resource_name a owl:DatatypeProperty ;
    rdfs:domain onto:Resource ;
    rdfs:range xsd:string .

onto:RecommendedPreviousSubject_description a owl:DatatypeProperty ;
    rdfs:domain onto:RecommendedPreviousSubject ;
    rdfs:range xsd:string .

onto:RecommendedPreviousKnowledge_description a owl:DatatypeProperty ;
    rdfs:domain onto:RecommendedPreviousKnowledge ;
    rdfs:range xsd:string .

# Object Properties
onto:Subject_character a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Character .

onto:Subject_studyPlan a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:StudyPlan .

onto:Subject_professors a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Professor .

onto:Subject_resources a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Resource .

onto:Subject_competencies a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Competence .

onto:Subject_outcomes a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Outcome .

onto:Subject_recommendedPreviousSubjects a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:RecommendedPreviousSubject .

onto:Subject_recommendedPreviousKnowledges a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:RecommendedPreviousKnowledge .

onto:Subject_topics a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Topic .

onto:Subject_evaluation a owl:ObjectProperty ;
    rdfs:domain onto:Subject ;
    rdfs:range onto:Evaluation .

onto:StudyPlan_school a owl:ObjectProperty ;
    rdfs:domain onto:StudyPlan ;
    rdfs:range onto:School .

onto:School_university a owl:ObjectProperty ;
    rdfs:domain onto:School ;
    rdfs:range onto:University .

onto:Evaluation_activities a owl:ObjectProperty ;
    rdfs:domain onto:Evaluation ;
    rdfs:range onto:Activity .

onto:Activity_relatedOutcomes a owl:ObjectProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range onto:Outcome .

onto:Activity_relatedCompetencies a owl:ObjectProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range onto:Competence .

onto:Activity_relatedTopics a owl:ObjectProperty ;
    rdfs:domain onto:Activity ;
    rdfs:range onto:Topic .

onto:Topic_subTopics a owl:ObjectProperty ;
    rdfs:domain onto:Topic ;
    rdfs:range onto:Topic .

# Instances
onto:fundamentosDeProgramacion a onto:Subject ;
    onto:Subject_name "Fundamentos de Programación" ;
    onto:Subject_code "2050001" ;
    onto:Subject_course "1" ;
    onto:Subject_courseYear "2010-11" ;
    onto:Subject_credits "12 ECTS" ;
    onto:Subject_language "ESPAÑOL" ;
    onto:Subject_period "Anual" ;
    onto:Subject_evaluationCriteria "Tal y como establece el artículo 6 de la normativa de la Universidad de Sevilla que regula la\nevaluación   y   calificación   de   las   asignaturas,   la   evaluación   de   las competencias,\nconocimientos y capacidades adquiridas por los estudiantes podrán basarse en actividades\nde  evaluación  continua,  exámenes parciales y/o exámenes finales. La asistencia a clases\nteóricas    podrá  puntuar  de  manera  positiva  en  la  calificación  final. Además se podrán\ncontemplar  requisitos  específicos,  que  deberán  ser  definidos  en los proyectos docentes\nanuales,  en relación a la realización de exámenes, a la realización de cualquier otro tipo de\npruebas,  a la obligatoriedad en la realización de trabajos, a la obligatoriedad a la asistencia\na   clases   prácticas,   a   proyectos  y  a  clases  prácticas  de  laboratorio,  así  como  a la\nparticipación en seminarios.\n\nSistemas de evaluaciónPROYECTO DOCENTE\nFundamentos de Programación\nClases Teór. Fundamentos de Programación Grupo 1 (1)\nCURSO 2024-25\nÚltima modificación 11/07/2024 Página 5 de 9Tal y como establece el artículo 6 de la normativa de la Universidad de Sevilla que regula la\nevaluación   y   calificación   de   las   asignaturas,   la   evaluación   de   las competencias,\nconocimientos y capacidades adquiridas por los estudiantes podrán basarse en actividades\nde  evaluación  continua,  exámenes parciales y/o exámenes finales. La asistencia a clases\nteóricas    podrá  puntuar  de  manera  positiva  en  la  calificación  final. Además se podrán\ncontemplar  requisitos  específicos,  que  deberán  ser  definidos  en los proyectos docentes\nanuales,  en relación a la realización de exámenes, a la realización de cualquier otro tipo de\npruebas,  a la obligatoriedad en la realización de trabajos, a la obligatoriedad a la asistencia\na   clases   prácticas,   a   proyectos  y  a  clases  prácticas  de  laboratorio,  así  como  a la\nparticipación en seminarios.\nCriterio de calificación\nPRIMERA CONVOCATORIA\n======================\nEn  la  primera  convocatoria  existen  dos  sistemas  de  evaluación:  la evaluación continua y la\nevaluación ordinaria.\n1. Evaluación continua\nLa  evaluación  continua  se compone de dos exámenes teóricos y un examen práctico por cada\ncuatrimestre.  Para  poder  realizar  el examen práctico de un cuatrimestre es necesario obtener\nuna media de 4 o más puntos en los exámenes teóricos del cuatrimestre.\nLa  nota  de  cada  cuatrimestre  se  calcula  ponderando  en un 20% las notas de los exámenes\nteóricos y en un 80% la nota del examen práctico:\n- Nota del cuatrimestre = 0,2 * nota media de teoría + 0,8 * nota del examen práctico\nLa  nota  de  la evaluación continua es la media de ambos cuatrimestres (C1 y C2), siempre que\nse haya obtenido al menos un 4 en cada uno:\n- Si C1 >= 4 y C2 >= 4, entonces NOTA_EV_CONT = (C1 + C2) / 2PROYECTO DOCENTE\nFundamentos de Programación\nClases Teór. Fundamentos de Programación Grupo 1 (1)\nCURSO 2024-25\nÚltima modificación 11/07/2024 Página 6 de 9- Si C1 < 4 o C2 < 4, entonces NOTA_EV_CONT = mínimo (4, (C1 + C2) / 2)\nSi NOTA_EV_CONT es igual o superior a 5 puntos, la asignatura estará aprobada.\n2. Evaluación ordinaria\nSi el alumno no realiza la evaluación continua, o la realiza, pero no aprueba mediante ella, debe\npresentarse  a  un  examen  final,  de  carácter práctico, que se compone de dos partes, una por\ncuatrimestre.  Para aprobar el examen debe obtenerse al menos un 4 en cada parte y un 5 en la\nmedia de ambas.\nSi  ha  obtenido  una  nota  mayor  o  igual  a 4 en uno de los dos cuatrimestres de la evaluación\ncontinua, puede presentarse únicamente al otro cuatrimestre en el examen final.\nLa nota final es la media de ambas partes (F1 y F2), siempre que se haya obtenido al menos un\n4 en cada una:\n- Si F1 >= 4 y F2 >= 4, entonces NOTA_FINAL = (F1 + F2) / 2\n- Si F1 < 4 o F2 < 4, entonces NOTA_FINAL = mínimo (4, (F1 + F2) / 2)\nSi NOTA_FINAL es igual o superior a 5 puntos, la asignatura estará aprobada.\nSEGUNDA CONVOCATORIA\n=======================\nLa  evaluación  de  la segunda convocatoria consiste en un examen práctico compuesto por dos\npartes,  una  por  cada  cuatrimestre. Para aprobar el examen debe obtenerse al menos un 5 en\ncada parte.PROYECTO DOCENTE\nFundamentos de Programación\nClases Teór. Fundamentos de Programación Grupo 1 (1)\nCURSO 2024-25\nÚltima modificación 11/07/2024 Página 7 de 9Si el alumno obtuvo una nota mayor o igual que 5 en uno de los dos cuatrimestres en la primera\nconvocatoria,   en   la   segunda   convocatoria   puede   presentarse   únicamente   a   la  parte\ncorrespondiente al cuatrimestre que no superó (con 5 ó más) en la primera convocatoria.\nLa  nota  de  la  segunda  convocatoria  es  la media de ambas partes (S1 y S2), siempre que se\nhaya obtenido al menos un 5 en cada una:\n- Si S1 >= 5 y S2 >= 5, entonces NOTA_2CONV = (S1 + S2) / 2\n- Si S1 < 5 o S2 < 5, entonces NOTA_2CONV = mínimo (4, (S1 + S2) / 2)\nTERCERA CONVOCATORIA\n=======================\nLa  evaluación  de  la  tercera  convocatoria  es  análoga a la de la segunda convocatoria, con la\ndiferencia de que no se conservan notas de las partes obtenidas en convocatorias anteriores.\nBibliografía recomendada\nInformación Adicional\n- Lenguaje Python. Python Software Foundation. https://docs.python.org/3/\n-  Python  3:  Los  fundamentos  del  lenguaje  (2ª  edición). Sébastien Chazallet. Ediciones ENI,\n2016. ISBN: 409-00614-2\n- Lenguaje Java. ORACLE. http://www.oracle.com/technetwork/java/index.html\n-               Introducción              a              la              Programación.              Miguel             Toro.\nhttps://sites.google.com/site/lsintroprogramacion/home\n-     Java     Platform,     Standard     Edition     Version     17     API     Specification.    ORACLE.\nhttps://docs.oracle.com/en/java/javase/17/docs/api/\n-  Objects  First  with Java: A Practical Introduction Using BlueJ, Global Edition (6ª Ed.). David J.PROYECTO DOCENTE\nFundamentos de Programación\nClases Teór. Fundamentos de Programación Grupo 1 (1)\nCURSO 2024-25\nÚltima modificación 11/07/2024 Página 8 de 9Barnes. Pearson, 2016. ISBN: 978-1292159041.\n-  Programación  orientada  a  objetos  con  Java  usando  Blue  J.  David J. Barnes and Michael\nKölling. Prentice-Hall, 2013. ISBN: 978-8483227916.PROYECTO DOCENTE\nFundamentos de Programación\nClases Teór. Fundamentos de Programación Grupo 1 (1)\nCURSO 2024-25\nÚltima modificación 11/07/2024 Página 9 de 9\nPowered by TCPDF (www.tcpdf.org)" ;
    onto:Subject_character onto:troncalCharacter ;
    onto:Subject_studyPlan onto:gradoInformaticaIS2010 ;
    onto:Subject_professors onto:antoniaMariaReinaQuintero,
        onto:manuelCarranzaGarcia,
        onto:joseCristobalRiquelmeSantos,
        onto:ferminCruzMata,
        onto:patriciaJimenezAguirre,
        onto:joseEnriqueSanchezLopez,
        onto:belenVegaMarquez ;
    onto:Subject_resources onto:resourcePythonDocs,
        onto:resourcePythonBook,
        onto:resourceJavaDocs,
        onto:resourceIntroProg,
        onto:resourceJavaApi17,
        onto:resourceObjectsFirstJava,
        onto:resourcePooJavaBlueJ ;
    onto:Subject_competencies onto:competenceE03,
        onto:competenceE04,
        onto:competenceE05 ;
    onto:Subject_outcomes onto:outcomeObjective1,
        onto:outcomeObjective2,
        onto:outcomeObjective3,
        onto:outcomeObjective4,
        onto:outcomeObjective5 ;
    onto:Subject_topics onto:partIPython,
        onto:partIIJava ; # Correcting instance name
    onto:Subject_evaluation onto:subjectEvaluation .

onto:troncalCharacter a onto:MandatoryCharacter . # PDF says TRONCAL

onto:gradoInformaticaIS2010 a onto:StudyPlan ;
    onto:StudyPlan_code "2010" ;
    onto:StudyPlan_name "Grado en Ingeniería Informática-Ingeniería del Software" ;
    onto:StudyPlan_school onto:etsIngenieriaInformatica .

onto:etsIngenieriaInformatica a onto:School ;
    onto:School_name "E.T.S. Ingeniería Informática" .
    # onto:School_university instance omitted as university name not in PDF

# Professor instances
onto:antoniaMariaReinaQuintero a onto:Professor ;
    onto:Professor_name "REINA QUINTERO, ANTONIA MARIA" ;
    onto:Professor_isCoordinator "true" .

onto:manuelCarranzaGarcia a onto:Professor ;
    onto:Professor_name "CARRANZA GARCIA, MANUEL" .

onto:joseCristobalRiquelmeSantos a onto:Professor ;
    onto:Professor_name "RIQUELME SANTOS, JOSE CRISTOBAL" .

onto:ferminCruzMata a onto:Professor ;
    onto:Professor_name "CRUZ MATA, FERMIN" .

onto:patriciaJimenezAguirre a onto:Professor ;
    onto:Professor_name "JIMENEZ AGUIRRE, PATRICIA" .

onto:joseEnriqueSanchezLopez a onto:Professor ;
    onto:Professor_name "SANCHEZ LOPEZ, JOSE ENRIQUE" .

onto:belenVegaMarquez a onto:Professor ;
    onto:Professor_name "VEGA MARQUEZ, BELEN" .

# Competence instances
onto:competenceE03 a onto:Competence ;
    onto:Competence_code "E03" .

onto:competenceE04 a onto:Competence ;
    onto:Competence_code "E04" .

onto:competenceE05 a onto:Competence ;
    onto:Competence_code "E05" .

# Outcome instances (from Objectives)
onto:outcomeObjective1 a onto:Outcome ;
    onto:Outcome_description "Aprender una metodología para el diseño, implementación y documentación de programas." .

onto:outcomeObjective2 a onto:Outcome ;
    onto:Outcome_description "Apreciar el papel central que juega la abstracción en la tarea de programar." .

onto:outcomeObjective3 a onto:Outcome ;
    onto:Outcome_description "Conocer estructuras de datos, algoritmos y esquemas de uso general." .

onto:outcomeObjective4 a onto:Outcome ;
    onto:Outcome_description "Introducir el paradigma (y aprender un lenguaje) de programación imperativa." .

onto:outcomeObjective5 a onto:Outcome ;
    onto:Outcome_description "Introducir el paradigma (y aprender un lenguaje) de programación orientada a objetos." .

# Evaluation instance
onto:subjectEvaluation a onto:Evaluation ;
    onto:Evaluation_name "Sistemas y criterios de evaluación y calificación" ;
    onto:Evaluation_activities onto:clasesTeoricasActivity,
        onto:practicasLaboratorioActivity,
        onto:practicasInformaticaActivity .

# Activity instances
onto:clasesTeoricasActivity a onto:Activity ;
    onto:Activity_name "Clases Teóricas" ;
    onto:Activity_duration "72" .

onto:practicasLaboratorioActivity a onto:Activity ;
    onto:Activity_name "Prácticas de Laboratorio" ;
    onto:Activity_duration "24" .

onto:practicasInformaticaActivity a onto:Activity ;
    onto:Activity_name "Prácticas de Informática" ;
    onto:Activity_duration "24" .

# Topic instances
onto:partIPython a onto:Topic ;
    onto:Topic_name "Part I: Python" ;
    onto:Topic_subTopics onto:introPython,
        onto:expresionesTiposIo,
        onto:condicionalesBucles,
        onto:funcionesTopic,
        onto:secuenciasListasTuplas,
        onto:diccionariosConjuntos .

onto:introPython a onto:Topic ;
    onto:Topic_name "Introducción a Python" .

onto:expresionesTiposIo a onto:Topic ;
    onto:Topic_name "Expresiones, tipos predefinidos y entrada/salida" .

onto:condicionalesBucles a onto:Topic ;
    onto:Topic_name "Instrucciones condicionales y bucles" .

onto:funcionesTopic a onto:Topic ;
    onto:Topic_name "Funciones" .

onto:secuenciasListasTuplas a onto:Topic ;
    onto:Topic_name "Secuencias, listas y tuplas" .

onto:diccionariosConjuntos a onto:Topic ;
    onto:Topic_name "Diccionarios y conjuntos" .

onto:partIIJava a onto:Topic ; # Correcting instance name
    onto:Topic_name "Part II: Java" ;
    onto:Topic_subTopics onto:introJava,
        onto:disenioTipos,
        onto:coleccionesTopic,
        onto:tratamientosSecuenciales .

onto:introJava a onto:Topic ;
    onto:Topic_name "Introducción al lenguaje Java" .

onto:disenioTipos a onto:Topic ;
    onto:Topic_name "Diseño de tipos" .

onto:coleccionesTopic a onto:Topic ;
    onto:Topic_name "Colecciones" .

onto:tratamientosSecuenciales a onto:Topic ;
    onto:Topic_name "Tratamientos secuenciales" .

# Resource instances
onto:resourcePythonDocs a onto:Resource ;
    onto:Resource_name "Lenguaje Python. Python Software Foundation. https://docs.python.org/3/" .

onto:resourcePythonBook a onto:Resource ;
    onto:Resource_name "Python 3: Los fundamentos del lenguaje (2ª edición). Sébastien Chazallet. Ediciones ENI, 2016. ISBN: 409-00614-2" .

onto:resourceJavaDocs a onto:Resource ;
    onto:Resource_name "Lenguaje Java. ORACLE. http://www.oracle.com/technetwork/java/index.html" .

onto:resourceIntroProg a onto:Resource ;
    onto:Resource_name "Introducción a la Programación. Miguel Toro. https://sites.google.com/site/lsintroprogramacion/home" .

onto:resourceJavaApi17 a onto:Resource ;
    onto:Resource_name "Java Platform, Standard Edition Version 17 API Specification. ORACLE. https://docs.oracle.com/en/java/javase/17/docs/api/" .

onto:resourceObjectsFirstJava a onto:Resource ;
    onto:Resource_name "Objects First with Java: A Practical Introduction Using BlueJ, Global Edition (6ª Ed.). David J. Barnes. Pearson, 2016. ISBN: 978-1292159041." .

onto:resourcePooJavaBlueJ a onto:Resource ;
    onto:Resource_name "Programación orientada a objetos con Java usando Blue J. David J. Barnes and Michael Kölling. Prentice-Hall, 2013. ISBN: 978-8483227916." .

# RecommendedPreviousSubject instances omitted as no data in PDF
# RecommendedPreviousKnowledge instances omitted as no data in PDF

